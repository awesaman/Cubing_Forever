{"version":3,"sources":["img/events/222.svg","img/events/333.svg","img/events/333bf.svg","img/events/333fm.svg","img/events/333mbf.svg","img/events/333oh.svg","img/events/444.svg","img/events/444bf.svg","img/events/555.svg","img/events/555bf.svg","img/events/666.svg","img/events/777.svg","img/events/clock.svg","img/events/minx.svg","img/events/pyram.svg","img/events/skewb.svg","img/events/sq1.svg","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/solve.js","reducers/room.js","reducers/index.js","actions/types.js","store.js","utils/api.js","components/timer/Chat.js","actions/alert.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/layout/Alert.js","components/layout/NotFound.js","components/auth/Register.js","components/auth/Login.js","actions/profile.js","components/profiles/Events.js","components/profiles/Dashboard.js","utils/useKey.js","actions/solve.js","components/timer/Timer.js","components/tutorials/Tutorials.js","components/layout/Loading.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/routing/PrivateRoute.js","components/profiles/ProfileForm.js","components/profiles/DisplayProfile.js","components/timer/Stats.js","actions/room.js","utils/socket.js","components/timer/CompeteTimer.js","components/rooms/RoomItem.js","components/rooms/Rooms.js","components/routing/Routes.js","utils/setAuthToken.js","App.js","index.js","img/events sync /^/.//.*/.svg$","img/logo.png","img/cubenotation.png","img/spinner.gif"],"names":["module","exports","initialState","token","localStorage","getItem","isAuthenticated","loading","user","profile","profiles","repos","error","session","roomID","isHost","hostPresent","locked","stats","chats","desc","scramble","event","combineReducers","alert","state","action","type","payload","filter","id","auth","solve","room","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","api","axios","create","baseURL","headers","interceptors","response","use","res","err","data","msg","dispatch","Promise","reject","chatbox","showAlert","alertType","timeout","v4","setTimeout","loadUser","a","defaults","common","get","connect","logout","removeItem","useState","open","setOpen","publicLinks","className","to","onClick","privateLinks","src","logo","alt","href","e","preventDefault","Landing","alerts","length","map","key","NotFound","register","formData","post","setItem","errors","forEach","username","email","password","confirm_password","setFormData","onChange","target","name","value","onSubmit","placeholder","rel","login","body","console","log","required","minLength","getCurrentProfile","statusText","status","Events","events","_id","require","eventNaming","single","mo3","avg5","avg12","deleteAccount","window","confirm","delete","useEffect","avatar","bio","location","wcaid","useSpace","cb","callbackRef","useRef","current","handle","code","document","activeElement","nodeName","toLowerCase","addEventListener","removeEventListener","getSession","ev","split","join","addSolve","sol","put","newSession","updateStats","addPenalty","penalty","clearSession","deleteSolve","setEvent","displaySolve","setDisplaySolve","setScramble","showMo3","toggleShowMo3","inspection","toggleInspection","cs","s","m","h","time","setTime","repeater","setRepeater","setPenalty","setStatus","green","setGreen","newcs","news","newm","newh","run","runInspection","reset","clearInterval","start","setInterval","stop","t","Math","floor","generateScramble","slice","seeded_scramble","Scrambow","setType","scramble_string","formatTime","num","round","result","concat","changeEvent","removeSolve","solves","plus2","dnf","clearSolves","getNewSession","cmo3","bmo3","cavg5","bavg5","cavg12","bavg12","cavg50","bavg50","cavg100","bavg100","numsolves","mean","best","worst","indexOf","bavg100loc","bavg50loc","bavg12loc","bavg5loc","Tutorials","url","controls","width","height","cubenotation","spinner","style","margin","display","ProfileItem","getProfiles","Loading","Component","component","rest","render","props","twitter","facebook","youtube","instagram","sessions","createProfile","edit","displaySocialInputs","toggleSocialInputs","editEvent","setEditEvent","profileData","social","close","addEvent","push","modifyEvent","n","i","newEvents","eventForm","pattern","onMouseUp","getProfileById","userId","match","params","useStyles","makeStyles","scrollable","minWidth","maxHeight","overflowY","tablecontainer","overflowX","marginTop","smallcol","midcol","classes","TableContainer","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","Object","keys","getOwnPropertyNames","scope","reverse","j","fontSize","createRoom","socket","io","receiveMessage","getState","message","setMessage","on","socketID","getElementById","scrollTop","scrollHeight","chat","special","text","timestamp","moment","format","emit","leaveRoom","setHost","setRoomEvent","setRoomScramble","setRoomDesc","setStats","getStats","setbmo3","setcmo3","setbavg5","setcavg5","setbavg12","setcavg12","setbest","setworst","leavingRoom","includes","final_scramble","backgroundColor","RoomItem","info","hostname","numusers","rooms","setRooms","toggle","setToggle","setDesc","setLocked","send_rooms","Routes","exact","path","Register","Login","Timer","Rooms","CompeteTimer","DisplayProfile","Profiles","Dashboard","ProfileForm","setAuthToken","App","ReactDOM","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","resolve"],"mappings":"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","file":"static/js/main.434e052c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/222.0e6c1571.svg\";","module.exports = __webpack_public_path__ + \"static/media/333.118dc8d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/333bf.30147783.svg\";","module.exports = __webpack_public_path__ + \"static/media/333fm.52c104de.svg\";","module.exports = __webpack_public_path__ + \"static/media/333mbf.1534e5a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/333oh.52561d68.svg\";","module.exports = __webpack_public_path__ + \"static/media/444.d0692659.svg\";","module.exports = __webpack_public_path__ + \"static/media/444bf.d2175199.svg\";","module.exports = __webpack_public_path__ + \"static/media/555.078c1cd6.svg\";","module.exports = __webpack_public_path__ + \"static/media/555bf.46b76753.svg\";","module.exports = __webpack_public_path__ + \"static/media/666.fe558ae7.svg\";","module.exports = __webpack_public_path__ + \"static/media/777.fd027254.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.e4cee523.svg\";","module.exports = __webpack_public_path__ + \"static/media/minx.42c108a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/pyram.6f3a5359.svg\";","module.exports = __webpack_public_path__ + \"static/media/skewb.0417e522.svg\";","module.exports = __webpack_public_path__ + \"static/media/sq1.7008caea.svg\";","import { SHOW_ALERT, HIDE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SHOW_ALERT:\n      return [...state, payload];\n    case HIDE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  AUTH_SUCCESS,\n  AUTH_FAIL,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  ACCOUNT_DELETED,\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case AUTH_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case ACCOUNT_DELETED:\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n      };\n    case AUTH_FAIL:\n    case LOGOUT:\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  GET_PROFILES,\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n        profile: null,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_SOLVES,\n  CLEAR_SOLVES,\n  SOLVE_ERROR,\n  ADD_SOLVE,\n  DELETE_SOLVE,\n  UPDATE_STATS,\n  ADD_PENALTY,\n} from '../actions/types';\n\nconst initialState = {\n  session: {},\n  loading: true,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_SOLVES:\n    case ADD_SOLVE:\n    case ADD_PENALTY:\n    case UPDATE_STATS:\n      return {\n        ...state,\n        session: payload,\n        loading: false,\n      };\n    case DELETE_SOLVE:\n    case CLEAR_SOLVES:\n      return {\n        ...state,\n        session: payload,\n        loading: true,\n      };\n    case SOLVE_ERROR:\n      return {\n        ...state,\n        ...payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  ROOM_ERROR,\n  CREATE_ROOM,\n  LEAVE_ROOM,\n  SET_ROOM,\n  GET_STATS,\n  RECEIVE_MESSAGE,\n  SET_EVENT,\n  SET_SCRAMBLE,\n  SET_DESC,\n  SET_HOST,\n  SET_STATS,\n} from '../actions/types';\n\nconst initialState = {\n  roomID: '',\n  isHost: false,\n  hostPresent: true,\n  locked: false,\n  stats: [],\n  chats: [],\n  desc: '',\n  scramble: '',\n  event: '',\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CREATE_ROOM:\n      return {\n        ...state,\n        roomID: payload.id,\n        desc: payload.desc,\n        locked: payload.locked,\n        isHost: true,\n        hostPresent: true,\n      };\n    case LEAVE_ROOM:\n      return {\n        ...state,\n        roomID: '',\n        chats: [],\n        stats: [],\n        event: '',\n        scramble: '',\n        isHost: false,\n        hostPresent: payload,\n      };\n    case SET_HOST:\n      return {\n        ...state,\n        isHost: payload,\n        hostPresent: payload,\n      };\n    case SET_DESC:\n      return {\n        ...state,\n        desc: payload,\n      };\n    case SET_ROOM:\n      return {\n        ...state,\n        roomID: payload,\n      };\n    case SET_STATS:\n    case GET_STATS:\n      return {\n        ...state,\n        stats: payload,\n      };\n    case RECEIVE_MESSAGE:\n      return {\n        ...state,\n        chats: payload,\n      };\n    case SET_EVENT:\n      return {\n        ...state,\n        event: payload,\n      };\n    case SET_SCRAMBLE:\n      return {\n        ...state,\n        scramble: payload,\n      };\n    case ROOM_ERROR:\n      return {\n        ...state,\n        error: payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport solve from './solve';\nimport room from './room';\n\nexport default combineReducers({\n  alert,\n  auth,\n  profile,\n  solve,\n  room,\n});\n","export const SHOW_ALERT = 'SHOW_ALERT';\nexport const HIDE_ALERT = 'HIDE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\nexport const GET_SOLVES = 'GET_SOLVES';\nexport const CLEAR_SOLVES = 'CLEAR_SOLVES';\nexport const ADD_SOLVE = 'ADD_SOLVE';\nexport const DELETE_SOLVE = 'DELETE_SOLVE';\nexport const ADD_SESSION = 'ADD_SESSION';\nexport const ADD_PENALTY = 'ADD_PENALTY';\nexport const UPDATE_STATS = 'UPDATE_STATS';\nexport const SOLVE_ERROR = 'SOLVE_ERROR';\nexport const RECEIVE_MESSAGE = 'RECEIVE_MESSAGE';\nexport const CREATE_ROOM = 'CREATE_ROOM';\nexport const GET_STATS = 'GET_STATS';\nexport const SET_STATS = 'SET_STATS';\nexport const SET_HOST = 'SET_HOST';\nexport const SET_ROOM = 'SET_ROOM';\nexport const SET_EVENT = 'SET_EVENT';\nexport const SET_SCRAMBLE = 'SET_SCRAMBLE';\nexport const SET_DESC = 'SET_DESC';\nexport const LEAVE_ROOM = 'LEAVE_ROOM';\nexport const ROOM_ERROR = 'ROOM_ERROR';\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import axios from 'axios';\nimport store from '../store';\nimport { LOGOUT } from '../actions/types';\n\nconst api = axios.create({\n  baseURL: '/api',\n  headers: { 'Content-Type': 'application/json' },\n});\n\n// checks if the api is still valid or not\napi.interceptors.response.use(\n  res => res,\n  err => {\n    if (err.response.data.msg === 'Token is not valid') {\n      store.dispatch({ type: LOGOUT }); // logout if token expired\n    }\n    return Promise.reject(err);\n  }\n);\n\nexport default api;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { receiveMessage } from '../../actions/room';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { socket } from '../../utils/socket';\nlet chatbox;\n\nconst Chat = ({ room, auth: { user }, receiveMessage }) => {\n  const [message, setMessage] = useState('');\n\n  const onChange = e => {\n    setMessage(e.target.value);\n  };\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    const msg = {\n      text: message,\n      username: user.username,\n      avatar: user.avatar,\n      timestamp: moment().format('hh:mm a'),\n    };\n    socket.emit('input message', room.roomID, msg);\n    receiveMessage(msg);\n    setMessage('');\n  };\n\n  useEffect(() => {\n    let url = window.location.href.split('/');\n    if (room.roomID !== url[url.length - 1]) {\n      room.roomID = url[url.length - 1];\n    }\n\n    socket.on('user connected', (socketID, msg) => {\n      receiveMessage(msg);\n    });\n\n    socket.on('user left', msg => {\n      receiveMessage(msg);\n    });\n\n    socket.on('output message', msg => {\n      receiveMessage(msg);\n    });\n  }, []);\n\n  useEffect(() => {\n    chatbox = document.getElementById('chat-box');\n    chatbox.scrollTop = chatbox.scrollHeight;\n  }, [room.chats]);\n\n  return (\n    <Fragment>\n      <div>\n        <div className='scrollable' id='chat-box'>\n          {room.chats.length > 0 &&\n            room.chats.map((chat, i) => (\n              <div key={i} className='chat'>\n                <img\n                  src={chat.avatar}\n                  alt='Please provide an avatar through Gravatar'\n                  className='chat-image'\n                />\n                <div>\n                  <small className='text-light'>{chat.username}</small>\n                  <p className={chat.special ? 'text-light' : 'text-primary'}>\n                    {chat.text}\n                  </p>\n                </div>\n                <small className='mleft gray'>{chat.timestamp}</small>\n              </div>\n            ))}\n        </div>\n        <form onSubmit={receiveMessage} className='form'>\n          <div className='message-box'>\n            <input\n              id='message'\n              placeholder='Send a message'\n              type='text'\n              value={message}\n              onChange={onChange}\n            />\n\n            <button onClick={sendMessage} className='btn btn-primary send'>\n              SEND\n            </button>\n          </div>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nChat.propTypes = {\n  room: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  receiveMessage: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return {\n    room: state.room,\n    auth: state.auth,\n  };\n};\n\nexport default connect(mapStateToProps, { receiveMessage })(Chat);\n","import { SHOW_ALERT, HIDE_ALERT } from './types';\nimport v4 from 'uuid';\n\nexport const showAlert = (msg, alertType, timeout = 5000) => dispatch => {\n  const id = v4(); // each alert needs an ID\n  dispatch({\n    type: SHOW_ALERT,\n    payload: { msg, alertType, id },\n  });\n\n  // show message for 5 seconds, then hide\n  setTimeout(() => dispatch({ type: HIDE_ALERT, payload: id }), timeout);\n};\n","import api from '../utils/api';\nimport { showAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  AUTH_SUCCESS,\n  AUTH_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from './types';\n\n// load user\nexport const loadUser = () => async dispatch => {\n  try {\n    if (localStorage.token)\n      api.defaults.headers.common['x-auth-token'] = localStorage.token;\n    const res = await api.get('/auth');\n\n    dispatch({\n      type: AUTH_SUCCESS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_FAIL,\n    });\n  }\n};\n\n// register user\nexport const register = formData => async dispatch => {\n  try {\n    const res = await api.post('/user', formData);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    // if it was a success, token is stored\n    localStorage.setItem('token', res.data.token);\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(showAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n// login user\nexport const login = (email, password) => async dispatch => {\n  const body = { email, password };\n\n  try {\n    const res = await api.post('/auth', body);\n    console.log(res);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    // if it was a success, token is stored\n    localStorage.setItem('token', res.data.token);\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(err.response.data);\n    if (errors) {\n      errors.forEach(error => dispatch(showAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n// logout user\nexport const logout = () => {\n  localStorage.removeItem('token');\n  return { type: LOGOUT };\n};\n","import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport logo from '../../img/logo.png';\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const [open, setOpen] = useState(false);\n\n  const onClick = () => {\n    setOpen(!open);\n    logout();\n  };\n\n  const publicLinks = (\n    <ul>\n      <li>\n        <Link className='link' to='/tutorials' onClick={() => setOpen(!open)}>\n          Tutorials\n        </Link>\n      </li>\n      <li>\n        <Link className='link' to='/login' onClick={() => setOpen(!open)}>\n          Login\n        </Link>\n      </li>\n    </ul>\n  );\n\n  const privateLinks = (\n    <ul>\n      <li>\n        <Link className='link' to='/tutorials' onClick={() => setOpen(!open)}>\n          Tutorials\n        </Link>\n      </li>\n      <li>\n        <Link className='link' to='/timer' onClick={() => setOpen(!open)}>\n          Timer\n        </Link>\n      </li>\n      <li>\n        <Link className='link' to='/compete' onClick={() => setOpen(!open)}>\n          Compete\n        </Link>\n      </li>\n      <li>\n        <Link className='link' to='/profiles' onClick={() => setOpen(!open)}>\n          Cubers\n        </Link>\n      </li>\n      <li>\n        <Link className='link' to='/dashboard' onClick={() => setOpen(!open)}>\n          Dashboard\n        </Link>\n      </li>\n      <li>\n        <Link className='link' to='/' onClick={onClick}>\n          Logout\n        </Link>\n      </li>\n    </ul>\n  );\n\n  return (\n    <Fragment>\n      <nav className='navbar'>\n        <Link className='link-logo' to='/'>\n          <img className='logo' src={logo} alt='Cubing Forever' />\n        </Link>\n        <div className='desktop'>\n          {!loading && (\n            <Fragment>{isAuthenticated ? privateLinks : publicLinks}</Fragment>\n          )}\n        </div>\n        <div className='mobile'>\n          <a\n            href='#'\n            className='L hamburger'\n            onClick={e => {\n              e.preventDefault();\n              setOpen(!open);\n            }}\n          >\n            <i className={open ? 'fas fa-times' : 'fas fa-bars'} />\n          </a>\n        </div>\n      </nav>\n\n      {!loading && open && (\n        <div className='reveal'>\n          {isAuthenticated ? privateLinks : publicLinks}\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Landing = () => {\n  return (\n    <section className='landing'>\n      <div className='landing-inner'>\n        <h1 className='XL'>CUBING FOREVER</h1>\n        <p className='L subheading'>\n          Create an account to find friends and battle against them!\n        </p>\n        <div className='buttons'>\n          <Link to='/register' className='btn btn-primary'>\n            Sign Up\n          </Link>\n          <Link to='/login' className='btn btn-light'>\n            Login\n          </Link>\n        </div>\n        <br />\n        <div className='extras'>\n          <div>\n            <Link to='/tutorials'>\n              <i className='fas fa-chalkboard-teacher' />\n              <p className='L text-light'>LEARN</p>\n            </Link>\n          </div>\n          <div>\n            <Link to='/timer'>\n              <i className='fas fa-stopwatch' />\n              <p className='L text-light'>PRACTICE</p>\n            </Link>\n          </div>\n          <div>\n            <Link to='/compete'>\n              <i className='fas fa-users' />\n              <p className='L text-light'>COMPETE</p>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map(alert => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { Fragment } from 'react';\n\nconst NotFound = () => {\n  return (\n    <Fragment>\n      <h1 className='L text-primary'>\n        <i className='fas fa-exclamation-triangle' /> Page Not Found\n      </h1>\n      <p>Sorry, this page does not exist</p>\n    </Fragment>\n  );\n};\n\nexport default NotFound;\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { showAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ showAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirm_password: '',\n  });\n\n  const { username, email, password, confirm_password } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirm_password)\n      showAlert('Passwords do not match', 'danger');\n    else register({ username, email, password });\n  };\n\n  if (isAuthenticated) return <Redirect to='/dashboard' />;\n\n  return (\n    <Fragment>\n      <h1 className='L'>Sign Up</h1>\n      <p className='S'>\n        <i className='fas fa-user' /> Create Your Account\n      </p>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Username'\n            name='username'\n            value={username}\n            onChange={onChange}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            If your email has a Gravatar profile picture associated with it,\n            that will be seen on your profile. To create a Gravatar, follow{' '}\n            <a\n              href='https://en.gravatar.com/support/how-to-sign-up/'\n              target='_blank'\n              rel='noopener noreferrer'\n              className='underline'\n            >\n              this link\n            </a>\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={onChange}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Confirm Password'\n            name='confirm_password'\n            value={confirm_password}\n            onChange={onChange}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Register' />\n      </form>\n      <p>\n        Already have an account?{' '}\n        <Link to='/login' className='underline'>\n          Sign In\n        </Link>\n      </p>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  showAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { showAlert, register })(Register);\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  if (isAuthenticated) return <Redirect to='/dashboard' />;\n\n  return (\n    <Fragment>\n      <h1 className='L'>Sign In</h1>\n      <p className='S'>\n        <i className='fas fa-user' /> Sign Into Your Account\n      </p>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={onChange}\n            minLength='6'\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Login' />\n      </form>\n      <p className='my-1'>\n        Don't have an account?\n        <Link to='/register' className='underline'>\n          {' '}\n          Sign Up\n        </Link>\n      </p>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import api from '../utils/api';\nimport { showAlert } from './alert';\n\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED,\n} from './types';\n\n// Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await api.get('/profile/me');\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get all profiles\nexport const getProfiles = () => async dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await api.get('/profile');\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get profile by ID\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await api.get(`/profile/user/${userId}`);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Create or update profile\nexport const createProfile = (formData, edit = false) => async dispatch => {\n  try {\n    const res = await api.post('/profile', formData);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(\n      showAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\n    );\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(showAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete account & profile\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This can NOT be undone.')) {\n    try {\n      await api.delete('/profile');\n\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n\n      dispatch(showAlert('Your account has been permanently deleted.'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status },\n      });\n    }\n  }\n};\n","import React, { Fragment } from 'react';\nimport eventNaming from '../../utils/eventNaming.json';\nimport PropTypes from 'prop-types';\n\nconst Events = ({ events }) => {\n  return (\n    <Fragment>\n      {events.map(event => (\n        <div key={event._id} className='event-display'>\n          <div className='event-main'>\n            <img\n              src={require(`../../img/events/${eventNaming[event.name]}.svg`)}\n              alt={event.name}\n              className='event-img'\n            />\n            <p className='S'>{event.name}</p>\n          </div>\n          <div>\n            {event.single && <p className='S'>Single - {event.single}</p>}\n            {event.mo3 && <p className='S'>Mean 3 - {event.mo3}</p>}\n            {event.avg5 && <p className='S'>Avg 5 - {event.avg5}</p>}\n            {event.avg12 && <p className='S'>Avg 12 - {event.avg12}</p>}\n          </div>\n        </div>\n      ))}\n    </Fragment>\n  );\n};\n\nEvents.propTypes = {\n  events: PropTypes.array.isRequired,\n};\n\nexport default Events;\n","import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport Events from './Events';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile },\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  return (\n    <Fragment>\n      <h1 className='L'>Dashboard</h1>\n      <p className='M'>\n        <i className='fas fa-user' /> Welcome {user && user.username}\n      </p>\n      {profile !== null ? (\n        <Fragment>\n          <div className='info'>\n            <div className='first'>\n              {user && (\n                <img\n                  src={user.avatar}\n                  alt='Please provide an avatar through Gravatar'\n                  className='avatar'\n                />\n              )}\n            </div>\n            <div className='second'>\n              {profile.bio && (\n                <p className='S'>\n                  <strong>Bio: </strong>\n                  {profile.bio}\n                </p>\n              )}\n              {profile.location && (\n                <p className='S'>\n                  <strong>Location: </strong>\n                  {profile.location}\n                </p>\n              )}\n              {profile.wcaid && (\n                <p className='S'>\n                  <strong>WCA Profile:</strong>{' '}\n                  <a\n                    href={`https://www.worldcubeassociation.org/persons/${profile.wcaid}`}\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    className='underline'\n                  >\n                    {profile.wcaid}\n                  </a>\n                </p>\n              )}\n            </div>\n          </div>\n\n          {profile.events && <Events events={profile.events} />}\n\n          <div className='buttons'>\n            <Link to='/edit-profile' className='btn btn-light'>\n              <i className='fas fa-user-circle' /> Edit Profile\n            </Link>\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\n              <i className='fas fa-user-minus' /> Delete My Account\n            </button>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>\n            You have not yet set up a profile. You should add events to your\n            profile so the app can be customized to your needs! Create a profile\n            using the link below:\n          </p>\n          <br />\n          <Link to='/create-profile' className='btn btn-primary my-1'>\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n  Dashboard\n);\n","import { useRef, useEffect } from 'react';\n\nconst useSpace = (key, cb) => {\n  const callbackRef = useRef(cb);\n\n  useEffect(() => {\n    callbackRef.current = cb;\n  });\n\n  useEffect(() => {\n    const handle = e => {\n      if (\n        (e.code === 'Space' ||\n          e.code === 'KeyX' ||\n          e.code === 'KeyC' ||\n          e.code === 'KeyV' ||\n          e.code === 'KeyB' ||\n          e.code === 'KeyN' ||\n          e.code === 'KeyM') &&\n        document.activeElement.nodeName.toLowerCase() !== 'input'\n      ) {\n        e.preventDefault();\n        callbackRef.current(e);\n      }\n    };\n    document.addEventListener(key, handle);\n    return () => document.removeEventListener(key, handle);\n  }, []);\n};\n\nexport default useSpace;\n","import api from '../utils/api';\n\nimport {\n  GET_SOLVES,\n  CLEAR_SOLVES,\n  SOLVE_ERROR,\n  ADD_SOLVE,\n  ADD_SESSION,\n  DELETE_SOLVE,\n  UPDATE_STATS,\n  ADD_PENALTY,\n} from './types';\n\n// Get last session\nexport const getSession = event => async dispatch => {\n  try {\n    let ev = event.split(' ').join('%20');\n    const res = await api.get(`/profile/solve/${ev}`);\n\n    dispatch({\n      type: GET_SOLVES,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: SOLVE_ERROR,\n      payload: { error: err },\n    });\n  }\n};\n\n// Add a solve\nexport const addSolve = (event, sol) => async dispatch => {\n  try {\n    let ev = event.split(' ').join('%20');\n    const res = await api.put(`/profile/solve/${ev}`, sol);\n\n    dispatch({\n      type: ADD_SOLVE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: SOLVE_ERROR,\n      payload: { error: err },\n    });\n  }\n};\n\n// Create a new session\nexport const newSession = event => async dispatch => {\n  try {\n    let ev = event.split(' ').join('%20');\n    const res = await api.put(`/profile/session/${ev}`);\n\n    dispatch({\n      type: ADD_SESSION,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: SOLVE_ERROR,\n      payload: { error: err },\n    });\n  }\n};\n\n// Update Stats\nexport const updateStats = event => async dispatch => {\n  try {\n    let ev = event.split(' ').join('%20');\n    const res = await api.put(`/profile/stats/${ev}`);\n\n    dispatch({\n      type: UPDATE_STATS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: SOLVE_ERROR,\n      payload: { error: err },\n    });\n  }\n};\n\n// Add a penalty to a solve\nexport const addPenalty = (event, id, penalty) => async dispatch => {\n  try {\n    let ev = event.split(' ').join('%20');\n    const res = await api.put(`/profile/solve/${penalty}/${ev}/${id}`);\n\n    dispatch({\n      type: ADD_PENALTY,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: SOLVE_ERROR,\n      payload: { error: err },\n    });\n  }\n};\n\n// Clear current session\nexport const clearSession = event => async dispatch => {\n  try {\n    let ev = event.split(' ').join('%20');\n    const res = await api.delete(`/profile/solve/${ev}`);\n\n    dispatch({\n      type: CLEAR_SOLVES,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: SOLVE_ERROR,\n      payload: { error: err },\n    });\n  }\n};\n\n// Delete a solve\nexport const deleteSolve = (event, id) => async dispatch => {\n  try {\n    let ev = event.split(' ').join('%20');\n    const res = await api.delete(`/profile/solve/${ev}/${id}`);\n\n    dispatch({\n      type: DELETE_SOLVE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: SOLVE_ERROR,\n      payload: { error: err },\n    });\n  }\n};\n","import React, { Fragment, useState, useEffect } from 'react';\nimport eventNaming from '../../utils/eventNaming.json';\nimport { Scrambow } from '../../../node_modules/scrambow/dist/scrambow';\nimport useSpace from '../../utils/useKey';\nimport {\n  getSession,\n  newSession,\n  clearSession,\n  addSolve,\n  addPenalty,\n  deleteSolve,\n  updateStats,\n} from '../../actions/solve';\nimport { getCurrentProfile } from '../../actions/profile';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Timer = ({\n  getSession,\n  newSession,\n  clearSession,\n  addSolve,\n  addPenalty,\n  deleteSolve,\n  updateStats,\n  getCurrentProfile,\n  profile: { profile },\n  solve: { session, loading },\n}) => {\n  // state\n  const [event, setEvent] = useState('3x3');\n  const [displaySolve, setDisplaySolve] = useState(-1);\n  const [scramble, setScramble] = useState('Loading...');\n  const [showMo3, toggleShowMo3] = useState(false);\n  const [inspection, toggleInspection] = useState(false);\n  const [time, setTime] = useState({ cs: 0, s: 0, m: 0, h: 0 });\n  const [repeater, setRepeater] = useState();\n  const [penalty, setPenalty] = useState('');\n  const [status, setStatus] = useState('ready');\n  const [green, setGreen] = useState(false);\n\n  // variables for time\n  var newcs = time.cs,\n    news = time.s,\n    newm = time.m,\n    newh = time.h;\n\n  // timer functions\n  const run = () => {\n    if (newm === 60) {\n      newh++;\n      newm = 0;\n    }\n    if (news === 60) {\n      newm++;\n      news = 0;\n    }\n    if (newcs === 100) {\n      news++;\n      newcs = 0;\n    }\n    newcs++;\n    return setTime({ cs: newcs, s: news, m: newm, h: newh });\n  };\n\n  const runInspection = () => {\n    news--;\n    if (news < -1) {\n      setStatus('DNF');\n      setPenalty('DNF');\n    }\n    if (news === 0 || news === -1) {\n      setStatus('+2');\n      setPenalty('+2');\n    }\n    return setTime({ ...time, s: news });\n  };\n\n  const reset = () => {\n    setTime({ cs: 0, s: 0, m: 0, h: 0 });\n    clearInterval(repeater);\n    // setPenalty('');\n    newcs = news = newm = newh = 0;\n  };\n\n  const inspect = () => {\n    reset();\n    setTime({ ...time, s: 15 });\n    news = 15;\n    setStatus('inspecting');\n    setRepeater(setInterval(runInspection, 1000));\n  };\n\n  const start = () => {\n    reset();\n    setStatus('started');\n    run();\n    setRepeater(setInterval(run, 10));\n  };\n\n  const stop = async () => {\n    clearInterval(repeater);\n    setStatus('stopped');\n    let t = 3600 * time.h + 60 * time.m + time.s + 0.01 * time.cs;\n    t = Math.floor(t * 100) / 100;\n    await addSolve(event, { time: t, scramble });\n    await updateStats(event);\n  };\n\n  const generateScramble = async () => {\n    let ev = eventNaming[event];\n    if (ev.slice(0, 3) === '333' && ev !== '333fm') ev = '333';\n    if (ev.slice(0, 3) === '444') ev = '444';\n    if (ev.slice(0, 3) === '555') ev = '555';\n    const seeded_scramble = new Scrambow().setType(ev).get();\n    await setScramble(seeded_scramble[0].scramble_string);\n  };\n\n  // handle pressing the spacebar\n  const handleUp = () => {\n    if (status === 'ready') inspection ? inspect() : start();\n    if (status === 'inspecting' || status === '+2' || status === 'DNF') start();\n    if (status === 'stopped') setStatus('ready');\n    setGreen(false);\n  };\n\n  const handleDown = () => {\n    if (status === 'started') stop();\n    else setGreen(true);\n  };\n\n  // general helpful functions\n  const formatTime = (num, penalty = null) => {\n    if (typeof num !== 'number') return num;\n    num = Math.round(100 * num) / 100;\n    let h = Math.floor(num / 3600);\n    let m = Math.floor((num - h * 60) / 60);\n    let s = Math.floor(num - 3600 * h - m * 60);\n    let cs = num - 3600 * h - m * 60 - s;\n    cs = Math.floor(100 * cs);\n    let result = ``;\n    if (h > 0) {\n      result = result.concat(h, ':');\n      if (m < 10) result = result.concat('0');\n    }\n    if (m > 0) {\n      result = result.concat(m, ':');\n      if (s < 10) result = result.concat('0');\n    }\n    if (s > 0) {\n      result = result.concat(s, '.');\n      if (cs < 10) result = result.concat('0');\n    } else {\n      result = result.concat('0.');\n      if (cs < 10) result = result.concat('0');\n    }\n    result = result.concat(cs);\n    if (penalty === '+2') result = result.concat('+');\n    if (penalty === 'DNF') result = result.concat(' DNF');\n    return result;\n  };\n\n  // handling all options available to the user\n  const changeEvent = async e => {\n    await setEvent(e.target.value);\n    setDisplaySolve(-1);\n  };\n\n  const removeSolve = async () => {\n    await setDisplaySolve(displaySolve - 1);\n    await deleteSolve(event, session.solves[displaySolve]._id);\n    await updateStats(event);\n  };\n\n  const plus2 = async () => {\n    await addPenalty(event, session.solves[displaySolve]._id, '+2');\n    await updateStats(event);\n  };\n\n  const dnf = async () => {\n    await addPenalty(event, session.solves[displaySolve]._id, 'DNF');\n    await updateStats(event);\n  };\n\n  const clearSolves = async () => {\n    await setDisplaySolve(-1);\n    await clearSession(event);\n  };\n\n  const getNewSession = async () => {\n    await newSession(event);\n    await getSession(event);\n  };\n\n  // functions to run when state changes\n  useEffect(() => {\n    if (!profile) getCurrentProfile();\n    getSession(event);\n    setTime({ cs: 0, s: 0, m: 0, h: 0 });\n  }, [event, loading]);\n\n  useEffect(() => {\n    if (session.solves && session.solves.length > 0)\n      setDisplaySolve(session.solves.length - 1);\n    else setDisplaySolve(-1);\n    if (penalty !== '')\n      addPenalty(event, session.solves[session.solves.length - 1]._id, penalty);\n    setPenalty('');\n  }, [session.solves]);\n\n  useEffect(() => {\n    if (status === '+2') setPenalty('+2');\n    if (status === 'DNF') setPenalty('DNF');\n    if (status === 'ready') generateScramble();\n  }, [status]);\n\n  useSpace('keyup', handleUp);\n  useSpace('keydown', handleDown);\n\n  return (\n    <Fragment>\n      <div className='timer'>\n        <div className='timer-top'>\n          <div>\n            <img\n              src={require(`../../img/events/${eventNaming[event]}.svg`)}\n              alt={event.name}\n              className='small-image'\n            />\n          </div>\n          <select\n            className='event-picker'\n            name='name'\n            value={event}\n            onChange={changeEvent}\n          >\n            {profile &&\n              profile.events.map(ev => (\n                <option key={ev._id} value={ev.name}>\n                  {ev.name}\n                </option>\n              ))}\n          </select>\n        </div>\n        <div className='sidebar'>\n          <div className='mbottom'>\n            <h1 className='M'>Options</h1>\n            {session.solves && session.solves.length !== 0 && (\n              <Fragment>\n                <button\n                  className='btn btn-light btn-small'\n                  onClick={getNewSession}\n                >\n                  New Session\n                </button>\n                <button\n                  className='btn btn-light btn-small'\n                  onClick={clearSolves}\n                >\n                  Clear Session\n                </button>\n              </Fragment>\n            )}\n            <button\n              className='btn btn-light btn-small'\n              onClick={() => generateScramble()}\n            >\n              New Scramble\n            </button>\n            <button\n              className='btn btn-light btn-small'\n              onClick={() => toggleInspection(!inspection)}\n            >\n              Turn {inspection ? 'off' : 'on'} Inspection\n            </button>\n            <button\n              className='btn btn-light btn-small'\n              onClick={() => toggleShowMo3(!showMo3)}\n            >\n              {showMo3 ? 'Hide' : 'Show'} Mean of 3\n            </button>\n          </div>\n\n          <div>\n            <h1 className='M'>Stats</h1>\n            {session.solves && session.solves.length >= 3 && showMo3 && (\n              <Fragment>\n                <p>\n                  Current Mean 3:{' '}\n                  <span className='S'>{formatTime(session.cmo3)}</span>\n                </p>\n                <p>\n                  Best Mean 3:{' '}\n                  <span className='S'>{formatTime(session.bmo3)}</span>\n                </p>\n                <br />\n              </Fragment>\n            )}\n            {session.solves && session.solves.length >= 5 && (\n              <Fragment>\n                <p>\n                  Current Avg 5:{' '}\n                  <span className='S'>{formatTime(session.cavg5)}</span>\n                </p>\n                <p>\n                  {'('}Best Avg 5{'): '}\n                  <span className='S'>{formatTime(session.bavg5)}</span>\n                </p>\n                <br />\n              </Fragment>\n            )}\n            {session.solves && session.solves.length >= 12 && (\n              <Fragment>\n                <p>\n                  Current Avg 12:{' '}\n                  <span className='S'>{formatTime(session.cavg12)}</span>\n                </p>\n                <p>\n                  {'['}Best Avg 12{']: '}\n                  <span className='S'>{formatTime(session.bavg12)}</span>\n                </p>\n                <br />\n              </Fragment>\n            )}\n            {session.solves && session.solves.length >= 50 && (\n              <Fragment>\n                <p>\n                  Current Avg 50:{' '}\n                  <span className='S'>{formatTime(session.cavg50)}</span>\n                </p>\n                <p>\n                  {'{'}Best Avg 50{'}: '}\n                  <span className='S'>{formatTime(session.bavg50)}</span>\n                </p>\n                <br />\n              </Fragment>\n            )}\n            {session.solves && session.solves.length >= 100 && (\n              <Fragment>\n                <p>\n                  Current Avg 100:{' '}\n                  <span className='S'>{formatTime(session.cavg100)}</span>\n                </p>\n                <p>\n                  {'<'}Best Avg 100{'>: '}\n                  <span className='S'>{formatTime(session.bavg100)}</span>\n                </p>\n                <br />\n              </Fragment>\n            )}\n            {session.solves && session.solves.length >= 1 && (\n              <Fragment>\n                <p>Number of Solves: {session.numsolves}</p>\n                <p>Session Mean: {formatTime(session.mean)}</p>\n                <p>Best Solve: {formatTime(session.best)}</p>\n                <p>Worst Solve: {formatTime(session.worst)}</p>\n              </Fragment>\n            )}\n          </div>\n        </div>\n        <div>\n          {(status === 'stopped' ||\n            status === 'started' ||\n            status === 'ready') && (\n            <h1 className={green ? 'XL green' : 'XL'}>\n              {time.h > 0 && (\n                <span>\n                  {time.h}:{time.m < 10 && '0'}\n                </span>\n              )}\n              {time.m > 0 && (\n                <span>\n                  {time.m}:{time.s < 10 && '0'}\n                </span>\n              )}\n              {time.s}\n              <span className='centiseconds'>\n                .{time.cs < 10 && '0'}\n                {time.cs}\n              </span>\n            </h1>\n          )}\n          {status === 'inspecting' && (\n            <h1 className={green ? 'XL green' : 'XL'}>{time.s}</h1>\n          )}\n          {status === '+2' && <h1 className='XL red'>+2</h1>}\n          {status === 'DNF' && <h1 className='XL red'>DNF</h1>}\n          <p>Scramble: {scramble}</p>\n        </div>\n        <div className='solves'>\n          <p className='S inline'>Solves </p>\n          <small className='inline'>\n            (click on a solve to reveal info about it)\n          </small>\n          <br />\n          <div className='mbottom'>\n            {session.solves && session.solves.length > 0 ? (\n              session.solves.map(sol => (\n                <span\n                  key={sol._id}\n                  className='pointer-cursor'\n                  onClick={() => setDisplaySolve(session.solves.indexOf(sol))}\n                >\n                  {session.solves.indexOf(sol) === session.bavg100loc && '<'}\n                  {session.solves.indexOf(sol) === session.bavg50loc && '{'}\n                  {session.solves.indexOf(sol) === session.bavg12loc && '['}\n                  {session.solves.indexOf(sol) === session.bavg5loc && '('}\n                  {sol.penalty\n                    ? formatTime(sol.time, sol.penalty)\n                    : formatTime(sol.time)}\n                  {session.solves.indexOf(sol) === session.bavg5loc + 4 && ')'}\n                  {session.solves.indexOf(sol) === session.bavg12loc + 11 &&\n                    ']'}\n                  {session.solves.indexOf(sol) === session.bavg50loc + 49 &&\n                    '}'}\n                  {session.solves.indexOf(sol) === session.bavg100loc + 99 &&\n                    '>'}\n                  {session.solves.indexOf(sol) !== session.solves.length - 1 &&\n                    ', '}\n                </span>\n              ))\n            ) : (\n              <p>There are currently no solves in this session. </p>\n            )}\n          </div>\n          <div>\n            {session.solves && session.solves.length > 0 && displaySolve >= 0 && (\n              <Fragment>\n                <p className='S'>Solve Info</p>\n                <div>\n                  <p>Time: {formatTime(session.solves[displaySolve].time)}</p>\n                  {session.solves[displaySolve].penalty && (\n                    <p>Penalty: {session.solves[displaySolve].penalty}</p>\n                  )}\n                  <p>\n                    Solve: {displaySolve + 1}/{session.numsolves}\n                  </p>\n                  <p>Scramble: {session.solves[displaySolve].scramble}</p>\n                  <div className='buttons'>\n                    <button\n                      className='btn btn-danger btn-small btn-auto'\n                      onClick={removeSolve}\n                    >\n                      Delete\n                    </button>\n                    {session.solves[displaySolve].penalty !== 'DNF' && (\n                      <Fragment>\n                        {session.solves[displaySolve].penalty !== '+2' && (\n                          <button\n                            className='btn btn-light btn-small btn-auto'\n                            onClick={plus2}\n                          >\n                            +2\n                          </button>\n                        )}\n                        <button\n                          className='btn btn-light btn-small btn-auto'\n                          onClick={dnf}\n                        >\n                          DNF\n                        </button>\n                      </Fragment>\n                    )}\n                  </div>\n                </div>\n              </Fragment>\n            )}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nTimer.propTypes = {\n  getSession: PropTypes.func.isRequired,\n  newSession: PropTypes.func.isRequired,\n  clearSession: PropTypes.func.isRequired,\n  addSolve: PropTypes.func.isRequired,\n  addPenalty: PropTypes.func.isRequired,\n  deleteSolve: PropTypes.func.isRequired,\n  updateStats: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  solve: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  solve: state.solve,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, {\n  getSession,\n  newSession,\n  clearSession,\n  addSolve,\n  addPenalty,\n  deleteSolve,\n  updateStats,\n  getCurrentProfile,\n})(Timer);\n","import React, { Fragment } from 'react';\nimport ReactPlayer from 'react-player';\nimport cubenotation from '../../img/cubenotation.png';\n\nconst Tutorials = () => {\n  return (\n    <Fragment>\n      <h1 className='L'>Tutorials</h1>\n      <p>Here is the fastest way to learn how to solve a Rubik's Cube:</p>\n      <div className='fullscreen'>\n        <ReactPlayer\n          url='https://www.youtube.com/watch?v=7Ron6MN45LY'\n          controls={true}\n          width='100%'\n          height='100%'\n          className='react-player'\n        />\n      </div>\n      <p>\n        There are a few more things you can do right off the bat to start\n        picking up the pace.\n      </p>\n      <div className='group2'>\n        <ReactPlayer\n          url='https://www.youtube.com/watch?v=vmeleO65BHc'\n          controls={true}\n        />\n        <ReactPlayer\n          url='https://www.youtube.com/watch?v=wLuVF9Dk3AQ'\n          controls={true}\n        />\n      </div>\n      <div className='fullscreen'>\n        <ReactPlayer\n          url='https://www.youtube.com/watch?v=Ar_Zit1VLG0'\n          controls={true}\n          width='100%'\n          height='100%'\n          className='react-player'\n        />\n      </div>\n      <p>\n        The next two videos are a brief introduction to the most important\n        algorithm sets in all of cubing. Use the following image as a guide for\n        learning the algorithmic notation that speedsolvers use. Note that\n        following the letter, nothing means turn 90 degrees clockwise, ' means\n        turn 90 degrees counter-clockwise, and 2 means turn 180 degrees.\n      </p>\n      <div className='center'>\n        <img src={cubenotation} alt='Loading...' className='notation' />\n      </div>\n      <div className='group2'>\n        <ReactPlayer\n          url='https://www.youtube.com/watch?v=f_Yor-ydZjs'\n          controls={true}\n        />\n        <ReactPlayer\n          url='https://www.youtube.com/watch?v=GhmYBgLoQQg'\n          controls={true}\n        />\n      </div>\n\n      <h1>Full PLL (Permutation of the Last Layer)</h1>\n      <div className='group2'>\n        <ReactPlayer\n          url='https://www.youtube.com/watch?v=JvqGU0UZPcE'\n          controls={true}\n        />\n        <ReactPlayer\n          url='https://www.youtube.com/watch?v=HWIQdX8vHcE'\n          controls={true}\n        />\n      </div>\n      <h1>Full OLL (Orientation of the Last Layer)</h1>\n      <div className='group2'>\n        <ReactPlayer\n          url='https://www.youtube.com/watch?v=47JfJxU7EjM'\n          controls={true}\n        />\n        <ReactPlayer\n          url='https://www.youtube.com/watch?v=IasVqtCHoj0'\n          controls={true}\n        />\n      </div>\n      <p>Many more tutorials are on the way! Stay tuned to this page.</p>\n      <p>\n        Video Credits:{' '}\n        <a\n          href={'https://www.youtube.com/channel/UCqTVfT9JQqhA6_Hi_h_h97Q'}\n          target='_blank'\n          rel='noopener noreferrer'\n          className='underline'\n        >\n          Dylan Wang\n        </a>{' '}\n        (a.k.a. J Perm),{' '}\n        <a\n          href={'https://www.youtube.com/user/fazrulz1'}\n          target='_blank'\n          rel='noopener noreferrer'\n          className='underline'\n        >\n          Feliks Zemdegs\n        </a>{' '}\n        (from CubeSkills)\n      </p>\n    </Fragment>\n  );\n};\n\nexport default Tutorials;\n","import React, { Fragment } from 'react';\nimport spinner from '../../img/spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{\n        width: '200px',\n        margin: 'auto',\n        display: 'block',\n      }}\n      alt='Loading...'\n    />\n  </Fragment>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport eventNaming from '../../utils/eventNaming.json';\n\nconst ProfileItem = ({\n  profile: {\n    user: { _id, username, avatar },\n    bio,\n    location,\n    wcaid,\n    events,\n  },\n}) => {\n  return (\n    <div className='profile'>\n      <img src={avatar} alt='' className='large-avatar' />\n      <div>\n        <h2>{username}</h2>\n        {location && (\n          <p>\n            <i>from {location}</i>\n          </p>\n        )}\n        {bio && <p>{bio}</p>}\n      </div>\n      <div className='all-events'>\n        {events.map(event => (\n          <img\n            src={require(`../../img/events/${eventNaming[event.name]}.svg`)}\n            alt={event.name}\n            className='event-img'\n          />\n        ))}\n      </div>\n      <div className='buttons profile-buttons'>\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\n          View Profile\n        </Link>\n        {wcaid && (\n          <a\n            href={`https://www.worldcubeassociation.org/persons/${wcaid}`}\n            target='_blank'\n            rel='noopener noreferrer'\n            className='btn btn-light'\n          >\n            View WCA Profile\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileItem;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Loading from '../layout/Loading';\nimport ProfileItem from './ProfileItem';\nimport { getProfiles } from '../../actions/profile';\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Fragment>\n          <h1 className='L'>Profiles</h1>\n          <p className='S'>\n            <i className='fab fa-connectdevelop' /> Connect with cubers around\n            the world\n          </p>\n\n          <div className='profiles'>\n            {profiles.length > 0 ? (\n              profiles.map(profile => (\n                <ProfileItem key={profile._id} profile={profile} />\n              ))\n            ) : (\n              <h4>No profiles found...</h4>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Loading from '../layout/Loading';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      loading ? (\n        <Loading />\n      ) : isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to='/login' />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\nimport eventNaming from '../../utils/eventNaming.json';\n\nconst initialState = {\n  bio: '',\n  location: '',\n  wcaid: '',\n  events: [],\n  twitter: '',\n  facebook: '',\n  youtube: '',\n  instagram: '',\n  name: '',\n  single: '',\n  avg5: '',\n  avg12: '',\n  sessions: [{ solves: [] }],\n};\n\nconst ProfileForm = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n}) => {\n  // state\n  const [formData, setFormData] = useState(initialState);\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n  const [editEvent, setEditEvent] = useState(null);\n\n  useEffect(() => {\n    if (!profile) getCurrentProfile();\n    if (!loading && profile) {\n      const profileData = { ...initialState };\n      for (const key in profile) {\n        if (key in profileData) profileData[key] = profile[key];\n      }\n      for (const key in profile.social) {\n        if (key in profileData) profileData[key] = profile.social[key];\n      }\n      setFormData(profileData);\n    }\n  }, [loading, getCurrentProfile, profile]);\n\n  const {\n    bio,\n    location,\n    wcaid,\n    events,\n    twitter,\n    facebook,\n    youtube,\n    instagram,\n    name,\n    single,\n    mo3,\n    avg5,\n    avg12,\n    sessions,\n  } = formData;\n\n  const close = () => {\n    setEditEvent(null);\n  };\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, profile ? true : false);\n    if (editEvent === 'new') addEvent();\n    else if (editEvent !== null) modifyEvent(name);\n    close();\n  };\n\n  const openNew = () => {\n    setEditEvent('new');\n    setFormData({\n      ...formData,\n      name: '',\n      single: '',\n      mo3: '',\n      avg5: '',\n      avg12: '',\n    });\n  };\n\n  const addEvent = () => {\n    if (name === null) return;\n    const ev = {\n      name,\n      single,\n      mo3,\n      avg5,\n      avg12,\n      sessions,\n    };\n    events.push(ev);\n    setEditEvent(null);\n  };\n\n  const modifyEvent = (n, create = false) => {\n    setEditEvent(n);\n    for (let i in events) {\n      if (events[i].name === n) {\n        if (create)\n          setFormData({\n            ...formData,\n            name: events[i].name,\n            single: events[i].single,\n            mo3: events[i].mo3,\n            avg5: events[i].avg5,\n            avg12: events[i].avg12,\n          });\n        else {\n          let newEvents = events;\n          newEvents[i].name = name;\n          newEvents[i].single = single;\n          newEvents[i].mo3 = mo3;\n          newEvents[i].avg5 = avg5;\n          newEvents[i].avg12 = avg12;\n          setFormData({\n            ...formData,\n            events: newEvents,\n          });\n        }\n        break;\n      }\n    }\n  };\n\n  const removeEvent = n => {\n    setFormData({\n      ...formData,\n      events: events.filter(ev => ev.name !== n),\n    });\n  };\n\n  const eventForm = (\n    <Fragment>\n      <div className='form-group'>\n        {editEvent === 'new' && (\n          <select name='name' value={name} onChange={onChange}>\n            <option>* Select Event</option>\n            <option value='3x3'>3x3</option>\n            <option value='2x2'>2x2</option>\n            <option value='4x4'>4x4</option>\n            <option value='5x5'>5x5</option>\n            <option value='6x6'>6x6</option>\n            <option value='7x7'>7x7</option>\n            <option value='3x3 One-Handed'>3x3 One-Handed</option>\n            <option value='3x3 Blindfolded'>3x3 Blindfolded</option>\n            <option value='3x3 Multi-Blind'>3x3 Multi-Blind</option>\n            <option value='3x3 Fewest Moves'>3x3 Fewest Moves</option>\n            <option value='4x4 Blindfolded'>4x4 Blindfolded</option>\n            <option value='5x5 Blindfolded'>5x5 Blindfolded</option>\n            <option value='Pyraminx'>Pyraminx</option>\n            <option value='Megaminx'>Megaminx</option>\n            <option value='Square-1'>Square-1</option>\n            <option value='Skewb'>Skewb</option>\n            <option value=\"Rubik's Clock\">Rubik's Clock</option>\n          </select>\n        )}\n      </div>\n      <div className='form-group'>\n        <input\n          type='text'\n          placeholder='PB Single'\n          name='single'\n          pattern='\\d*:?[0-5]?[0-9]?:?[0-5]?[0-9]{1}\\.\\d{2}'\n          value={single}\n          onChange={onChange}\n        />\n        <small>Desired Format: HH:MM:SS.XX</small>\n      </div>\n      <div className='form-group'>\n        <input\n          type='text'\n          placeholder='PB Mean of 3'\n          name='mo3'\n          pattern='\\d*:?[0-5]?[0-9]?:?[0-5]?[0-9]{1}\\.\\d{2}'\n          value={mo3}\n          onChange={onChange}\n        />\n        <small>\n          This metric is only there for those few events like 6x6 and 7x7 where\n          the mean is tracked.\n        </small>\n      </div>\n      <div className='form-group'>\n        <input\n          type='text'\n          placeholder='PB Average of 5'\n          name='avg5'\n          pattern='\\d*:?[0-5]?[0-9]?:?[0-5]?[0-9]{1}\\.\\d{2}'\n          value={avg5}\n          onChange={onChange}\n        />\n        <small>Desired Format: HH:MM:SS.XX</small>\n      </div>\n      <div className='form-group'>\n        <input\n          type='text'\n          placeholder='PB Average of 12'\n          name='avg12'\n          pattern='\\d*:?[0-5]?[0-9]?:?[0-5]?[0-9]{1}\\.\\d{2}'\n          value={avg12}\n          onChange={onChange}\n        />\n        <small>Desired Format: HH:MM:SS.XX</small>\n      </div>\n\n      <div className='buttons'>\n        {editEvent !== 'new' ? (\n          <Fragment>\n            <button type='submit' className='btn btn-success'>\n              Save Changes\n            </button>\n            <button\n              onClick={() => removeEvent(name)}\n              type='button'\n              className='btn btn-danger'\n            >\n              Remove Event\n            </button>\n          </Fragment>\n        ) : (\n          <button type='submit' className='btn btn-success'>\n            Save Event\n          </button>\n        )}\n        <button onClick={close} type='button' className='btn btn-light'>\n          Close\n        </button>\n      </div>\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <h1 className='L text-primary'>Edit Your Profile</h1>\n      <p className='M'>\n        <i className='fas fa-user' /> Add some changes to your profile\n      </p>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={onChange}\n          />\n          <small>\n            Feel free to include any general information about yourself. Keep it\n            short!\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={onChange}\n          />\n          <small>\n            Only provide your location if you feel comfortable with it and want\n            to find cubers near you.\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='WCA ID'\n            name='wcaid'\n            value={wcaid}\n            onChange={onChange}\n          />\n          <small>\n            Type your WCA ID, and a link to your WCA Profile will be showcased\n            on your profile.\n          </small>\n        </div>\n\n        <p className='M'>Events</p>\n        {formData.events &&\n          formData.events.map(event => (\n            <Fragment key={event._id}>\n              <div className='event-display'>\n                <div className='event-main'>\n                  <img\n                    src={require(`../../img/events/${\n                      eventNaming[event.name]\n                    }.svg`)}\n                    alt={event.name}\n                    className='event-img'\n                  />\n                  <p className='S'>{event.name}</p>\n                </div>\n                <div>\n                  {event.single && <p className='S'>Single - {event.single}</p>}\n                  {event.mo3 && <p className='S'>Mean 3 - {event.mo3}</p>}\n                  {event.avg5 && <p className='S'>Avg 5 - {event.avg5}</p>}\n                  {event.avg12 && <p className='S'>Avg 12 - {event.avg12}</p>}\n                </div>\n\n                <div className='buttons edit'>\n                  <button\n                    onClick={() => modifyEvent(event.name, true)}\n                    type='button'\n                    className='btn btn-light'\n                  >\n                    Edit Event\n                  </button>\n                </div>\n              </div>\n              {editEvent === event.name && eventForm}\n            </Fragment>\n          ))}\n        {editEvent === 'new' ? (\n          eventForm\n        ) : (\n          <div className='buttons'>\n            <button\n              onMouseUp={openNew}\n              type='button'\n              className='btn btn-primary'\n            >\n              Add Event\n            </button>\n            <span> *Events are required</span>\n          </div>\n        )}\n\n        <div className='buttons'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            {displaySocialInputs ? 'Hide' : 'Add'} Social Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x' />\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x' />\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x' />\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x' />\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={onChange}\n              />\n            </div>\n          </Fragment>\n        )}\n        <div className='buttons'>\n          <input type='submit' className='btn btn-success' value='Save' />\n          <Link className='btn btn-light' to='/dashboard'>\n            Go Back\n          </Link>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nProfileForm.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  ProfileForm\n);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Loading from '../layout/Loading';\nimport { getProfileById } from '../../actions/profile';\nimport Events from './Events';\n\nconst DisplayProfile = ({\n  getProfileById,\n  profile: { profile },\n  auth,\n  match,\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  return (\n    <Fragment>\n      {profile === null ? (\n        <Loading />\n      ) : (\n        <Fragment>\n          <div className='buttons'>\n            <Link to='/profiles' className='btn btn-light'>\n              Back To Profiles\n            </Link>\n            {auth.isAuthenticated &&\n              auth.loading === false &&\n              auth.user._id === profile.user._id && (\n                <Link to='/edit-profile' className='btn btn-primary'>\n                  Edit Your Profile\n                </Link>\n              )}\n          </div>\n          <p className='M mtop'>\n            <i className='fas fa-user' />{' '}\n            {profile.user && profile.user.username}\n          </p>\n          <div className='info'>\n            <div className='first'>\n              {profile.user && (\n                <img\n                  src={profile.user.avatar}\n                  alt='Please provide an avatar through Gravatar'\n                  className='avatar'\n                />\n              )}\n            </div>\n            <div className='second'>\n              {profile.bio && (\n                <p className='S'>\n                  <strong>Bio: </strong>\n                  {profile.bio}\n                </p>\n              )}\n              {profile.location && (\n                <p className='S'>\n                  <strong>Location: </strong>\n                  {profile.location}\n                </p>\n              )}\n              {profile.wcaid && (\n                <p className='S'>\n                  <strong>WCA Profile:</strong>{' '}\n                  <a\n                    href={`https://www.worldcubeassociation.org/persons/${profile.wcaid}`}\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    className='underline'\n                  >\n                    {profile.wcaid}\n                  </a>\n                </p>\n              )}\n            </div>\n            <div>\n              {profile.social.youtube && (\n                <a\n                  href={profile.social.youtube}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  <i className='fab fa-youtube fa-2x' />\n                </a>\n              )}\n              {profile.social.instagram && (\n                <a\n                  href={profile.social.instagram}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  <i className='fab fa-instagram fa-2x' />\n                </a>\n              )}\n              {profile.social.twitter && (\n                <a\n                  href={profile.social.twitter}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  <i className='fab fa-twitter fa-2x' />\n                </a>\n              )}\n              {profile.social.facebook && (\n                <a\n                  href={profile.social.facebook}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  <i className='fab fa-facebook fa-2x' />\n                </a>\n              )}\n            </div>\n          </div>\n\n          {profile.events && <Events events={profile.events} />}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDisplayProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(DisplayProfile);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles({\n  scrollable: {\n    minWidth: 200,\n    maxHeight: 20,\n    overflowY: 'auto',\n  },\n  tablecontainer: {\n    overflowX: 'auto',\n    marginTop: 10,\n  },\n  smallcol: {\n    maxHeight: 20,\n    minWidth: 90,\n  },\n  midcol: {\n    maxHeight: 20,\n    minWidth: 120,\n  },\n});\n\nconst Stats = ({\n  formatTime,\n  bmo3,\n  cmo3,\n  bavg5,\n  cavg5,\n  bavg12,\n  cavg12,\n  best,\n  worst,\n  room,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <TableContainer className={classes.tablecontainer} component={Paper}>\n      <Table size='small' aria-label='a dense table'>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell className={classes.scrollable}>Solves</TableCell>\n            {cmo3 && (\n              <TableCell className={classes.midcol}>Curr Mean 3</TableCell>\n            )}\n            {bmo3 && (\n              <TableCell className={classes.midcol}>Best Mean 3</TableCell>\n            )}\n            {cavg5 && (\n              <TableCell className={classes.midcol}>Curr Avg 5</TableCell>\n            )}\n            {bavg5 && (\n              <TableCell className={classes.midcol}>Best Avg 5</TableCell>\n            )}\n            {cavg12 && (\n              <TableCell className={classes.midcol}>Curr Avg 12</TableCell>\n            )}\n            {bavg12 && (\n              <TableCell className={classes.midcol}>Best Avg 12</TableCell>\n            )}\n            {best && <TableCell className={classes.smallcol}>Best</TableCell>}\n            {worst && <TableCell className={classes.smallcol}>Worst</TableCell>}\n            <TableCell className={classes.smallcol}># Solves</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {Object.keys(room.stats).map((user, i) => (\n            <TableRow key={Object.getOwnPropertyNames(room.stats)[i]}>\n              <TableCell component='th' scope='row'>\n                {Object.getOwnPropertyNames(room.stats)[i]}\n              </TableCell>\n              {room.stats[user].numsolves > 0 && (\n                <TableCell className={classes.scrollable}>\n                  {room.stats[user].solves\n                    .slice(0)\n                    .reverse()\n                    .map((sol, j) => (\n                      <span\n                        key={j}\n                        style={\n                          sol.scramble === room.scramble\n                            ? { fontSize: '1.5em' }\n                            : {}\n                        }\n                      >\n                        {formatTime(sol.time)}\n                        {j !== room.stats[user].numsolves - 1 && ', '}\n                      </span>\n                    ))}\n                </TableCell>\n              )}\n              {cmo3 && (\n                <TableCell className={classes.midcol}>\n                  {formatTime(room.stats[user].cmo3)}\n                </TableCell>\n              )}\n              {bmo3 && (\n                <TableCell className={classes.midcol}>\n                  {formatTime(room.stats[user].bmo3)}\n                </TableCell>\n              )}\n              {cavg5 && (\n                <TableCell className={classes.midcol}>\n                  {formatTime(room.stats[user].cavg5)}\n                </TableCell>\n              )}\n              {bavg5 && (\n                <TableCell className={classes.midcol}>\n                  {formatTime(room.stats[user].bavg5)}\n                </TableCell>\n              )}\n              {cavg12 && (\n                <TableCell className={classes.midcol}>\n                  {formatTime(room.stats[user].cavg12)}\n                </TableCell>\n              )}\n              {bavg12 && (\n                <TableCell className={classes.midcol}>\n                  {formatTime(room.stats[user].bavg12)}\n                </TableCell>\n              )}\n              {best && (\n                <TableCell className={classes.smallcol}>\n                  {formatTime(room.stats[user].best)}\n                </TableCell>\n              )}\n              {worst && (\n                <TableCell className={classes.smallcol}>\n                  {formatTime(room.stats[user].worst)}\n                </TableCell>\n              )}\n              <TableCell className={classes.smallcol}>\n                {room.stats[user].numsolves}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nStats.propTypes = {\n  formatTime: PropTypes.func.isRequired,\n  bmo3: PropTypes.bool.isRequired,\n  cmo3: PropTypes.bool.isRequired,\n  bavg5: PropTypes.bool.isRequired,\n  cavg5: PropTypes.bool.isRequired,\n  bavg12: PropTypes.bool.isRequired,\n  cavg12: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  room: state.room,\n});\n\nexport default connect(mapStateToProps)(Stats);\n","import {\n  ROOM_ERROR,\n  CREATE_ROOM,\n  LEAVE_ROOM,\n  RECEIVE_MESSAGE,\n  GET_STATS,\n  SET_STATS,\n  SET_ROOM,\n  SET_SCRAMBLE,\n  SET_DESC,\n  SET_EVENT,\n  SET_HOST,\n} from './types';\nimport v4 from 'uuid';\nimport store from '../store';\n\n// Create a room\nexport const createRoom = (id, desc, locked) => dispatch => {\n  if (id === '') id = v4();\n  try {\n    dispatch({\n      type: CREATE_ROOM,\n      payload: { id, desc, locked },\n    });\n  } catch (err) {\n    dispatch({\n      type: ROOM_ERROR,\n      payload: err,\n    });\n  }\n};\n\n// Leave a room\nexport const leaveRoom = () => dispatch => {\n  let hostPresent = true;\n  if (store.getState().room.isHost) hostPresent = false;\n  try {\n    dispatch({\n      type: LEAVE_ROOM,\n      payload: hostPresent,\n    });\n  } catch (err) {\n    dispatch({\n      type: ROOM_ERROR,\n      payload: err,\n    });\n  }\n};\n\n// Adds a message to state\nexport const receiveMessage = msg => dispatch => {\n  try {\n    dispatch({\n      type: RECEIVE_MESSAGE,\n      payload: [...store.getState().room.chats, msg],\n    });\n  } catch (err) {\n    dispatch({\n      type: ROOM_ERROR,\n      payload: err,\n    });\n  }\n};\n\n// Gets solving statistics about other users in the room\nexport const getStats = (username, session) => dispatch => {\n  try {\n    dispatch({\n      type: GET_STATS,\n      payload: { ...store.getState().room.stats, [username]: session },\n    });\n  } catch (err) {\n    dispatch({\n      type: ROOM_ERROR,\n      payload: err,\n    });\n  }\n};\n\n// Gets solving statistics about other users in the room\nexport const setStats = stats => dispatch => {\n  try {\n    dispatch({\n      type: SET_STATS,\n      payload: stats,\n    });\n  } catch (err) {\n    dispatch({\n      type: ROOM_ERROR,\n      payload: err,\n    });\n  }\n};\n\n// Set Room ID\nexport const setRoom = id => dispatch => {\n  try {\n    dispatch({\n      type: SET_ROOM,\n      payload: id,\n    });\n  } catch (err) {\n    dispatch({\n      type: ROOM_ERROR,\n      payload: err,\n    });\n  }\n};\n\n// Set Room Event\nexport const setRoomEvent = event => dispatch => {\n  try {\n    dispatch({\n      type: SET_EVENT,\n      payload: event,\n    });\n  } catch (err) {\n    dispatch({\n      type: ROOM_ERROR,\n      payload: err,\n    });\n  }\n};\n\n// Set Room Scramble\nexport const setRoomScramble = scramble => dispatch => {\n  try {\n    dispatch({\n      type: SET_SCRAMBLE,\n      payload: scramble,\n    });\n  } catch (err) {\n    dispatch({\n      type: ROOM_ERROR,\n      payload: err,\n    });\n  }\n};\n\n// Set Room Desc\nexport const setRoomDesc = desc => dispatch => {\n  try {\n    dispatch({\n      type: SET_DESC,\n      payload: desc,\n    });\n  } catch (err) {\n    dispatch({\n      type: ROOM_ERROR,\n      payload: err,\n    });\n  }\n};\n\n// Set Room Host\nexport const setHost = hostPresent => dispatch => {\n  try {\n    dispatch({\n      type: SET_HOST,\n      payload: hostPresent,\n    });\n  } catch (err) {\n    dispatch({\n      type: ROOM_ERROR,\n      payload: err,\n    });\n  }\n};\n","import io from 'socket.io-client';\n\nexport const socket = io();\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport eventNaming from '../../utils/eventNaming.json';\nimport { Scrambow } from '../../../node_modules/scrambow/dist/scrambow';\nimport useSpace from '../../utils/useKey';\nimport moment from 'moment';\nimport Stats from './Stats';\nimport {\n  getSession,\n  newSession,\n  clearSession,\n  addSolve,\n  addPenalty,\n  updateStats,\n} from '../../actions/solve';\nimport { getCurrentProfile } from '../../actions/profile';\nimport {\n  leaveRoom,\n  getStats,\n  setHost,\n  setStats,\n  setRoomEvent,\n  setRoomScramble,\n  setRoomDesc,\n  createRoom,\n} from '../../actions/room';\nimport Chat from './Chat';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { socket } from '../../utils/socket';\n\nconst CompeteTimer = ({\n  getSession,\n  newSession,\n  clearSession,\n  addSolve,\n  addPenalty,\n  updateStats,\n  getCurrentProfile,\n  leaveRoom,\n  createRoom,\n  setHost,\n  setRoomEvent,\n  setRoomScramble,\n  setRoomDesc,\n  setStats,\n  getStats,\n  room,\n  auth: { user },\n  profile: { profile },\n  solve: { session, loading },\n}) => {\n  // state\n  const [event, setEvent] = useState('3x3');\n  const [scramble, setScramble] = useState(\n    'Host has not generated any scrambles yet'\n  );\n  const [inspection, toggleInspection] = useState(false);\n  const [time, setTime] = useState({ cs: 0, s: 0, m: 0, h: 0 });\n  const [repeater, setRepeater] = useState();\n  const [penalty, setPenalty] = useState('');\n  const [status, setStatus] = useState('waiting');\n  const [green, setGreen] = useState(false);\n  const [bmo3, setbmo3] = useState(false);\n  const [cmo3, setcmo3] = useState(false);\n  const [bavg5, setbavg5] = useState(true);\n  const [cavg5, setcavg5] = useState(true);\n  const [bavg12, setbavg12] = useState(false);\n  const [cavg12, setcavg12] = useState(false);\n  const [best, setbest] = useState(true);\n  const [worst, setworst] = useState(true);\n\n  // variables for time\n  var newcs = time.cs,\n    news = time.s,\n    newm = time.m,\n    newh = time.h;\n\n  // timer functions\n  const run = () => {\n    if (newm === 60) {\n      newh++;\n      newm = 0;\n    }\n    if (news === 60) {\n      newm++;\n      news = 0;\n    }\n    if (newcs === 100) {\n      news++;\n      newcs = 0;\n    }\n    newcs++;\n    return setTime({ cs: newcs, s: news, m: newm, h: newh });\n  };\n\n  const runInspection = () => {\n    news--;\n    if (news < -1) {\n      setStatus('DNF');\n      setPenalty('DNF');\n    }\n    if (news === 0 || news === -1) {\n      setStatus('+2');\n      setPenalty('+2');\n    }\n    return setTime({ ...time, s: news });\n  };\n\n  const reset = () => {\n    setTime({ cs: 0, s: 0, m: 0, h: 0 });\n    clearInterval(repeater);\n    newcs = news = newm = newh = 0;\n  };\n\n  const inspect = () => {\n    reset();\n    setTime({ ...time, s: 15 });\n    news = 15;\n    setStatus('inspecting');\n    setRepeater(setInterval(runInspection, 1000));\n  };\n\n  const start = () => {\n    reset();\n    setStatus('started');\n    run();\n    setRepeater(setInterval(run, 10));\n  };\n\n  const stop = async () => {\n    clearInterval(repeater);\n    setStatus('stopped');\n    let t = 3600 * time.h + 60 * time.m + time.s + 0.01 * time.cs;\n    t = Math.floor(t * 100) / 100;\n    await addSolve(event, { time: t, scramble: room.scramble });\n    await updateStats(event);\n  };\n\n  const generateScramble = () => {\n    let ev = eventNaming[event];\n    if (ev.slice(0, 3) === '333' && ev !== '333fm') ev = '333';\n    if (ev.slice(0, 3) === '444') ev = '444';\n    if (ev.slice(0, 3) === '555') ev = '555';\n    const seeded_scramble = new Scrambow().setType(ev).get();\n    const final_scramble = seeded_scramble[0].scramble_string;\n    socket.emit('new scramble', room.roomID, final_scramble);\n    setRoomScramble(final_scramble);\n    setScramble(final_scramble);\n    setStatus('ready');\n  };\n\n  // handle pressing the spacebar\n  const handleUp = () => {\n    if (status === 'ready') inspection ? inspect() : start();\n    if (status === 'inspecting' || status === '+2' || status === 'DNF') start();\n    if (status === 'stopped') setStatus('waiting');\n    setGreen(false);\n  };\n\n  const handleDown = () => {\n    if (status === 'started') stop();\n    else if (status !== 'waiting') setGreen(true);\n  };\n\n  // general helpful functions\n  const formatTime = (num, penalty = null) => {\n    if (typeof num !== 'number') return num;\n    num = Math.round(100 * num) / 100;\n    let h = Math.floor(num / 3600);\n    let m = Math.floor((num - h * 60) / 60);\n    let s = Math.floor(num - 3600 * h - m * 60);\n    let cs = num - 3600 * h - m * 60 - s;\n    cs = Math.floor(100 * cs);\n    let result = ``;\n    if (h > 0) {\n      result = result.concat(h, ':');\n      if (m < 10) result = result.concat('0');\n    }\n    if (m > 0) {\n      result = result.concat(m, ':');\n      if (s < 10) result = result.concat('0');\n    }\n    if (s > 0) {\n      result = result.concat(s, '.');\n      if (cs < 10) result = result.concat('0');\n    } else {\n      result = result.concat('0.');\n      if (cs < 10) result = result.concat('0');\n    }\n    result = result.concat(cs);\n    if (penalty === '+2') result = result.concat('+');\n    if (penalty === 'DNF') result = result.concat(' DNF');\n    return result;\n  };\n\n  // handling all options available to the user\n  const changeEvent = async e => {\n    await setEvent(e.target.value);\n  };\n\n  const plus2 = async () => {\n    await addPenalty(event, session.solves[session.numsolves - 1]._id, '+2');\n    await updateStats(event);\n  };\n\n  const dnf = async () => {\n    await addPenalty(event, session.solves[session.numsolves - 1]._id, 'DNF');\n    await updateStats(event);\n  };\n\n  const clearSolves = async () => {\n    await clearSession(event);\n  };\n\n  const getNewSession = async () => {\n    await newSession(event);\n    await getSession(event);\n  };\n\n  const leavingRoom = async () => {\n    if (room.isHost) {\n      socket.emit('host left', room.roomID);\n    }\n    socket.emit('leave room', room.roomID, {\n      special: true,\n      text: 'LEFT THE ROOM',\n      username: user.username,\n      avatar: user.avatar,\n      timestamp: moment().format('hh:mm a'),\n    });\n    await leaveRoom();\n  };\n\n  const hostRoom = () => {\n    socket.emit('new host', room.roomID, user.username);\n    createRoom(room.roomID, room.desc);\n    socket.emit('new event', room.roomID, event);\n    setRoomEvent(event);\n  };\n\n  // functions to run when state changes\n  useEffect(() => {\n    if (!profile) getCurrentProfile();\n    if (loading && room.isHost) {\n      socket.emit(\n        'initialize room',\n        room.roomID,\n        user.username,\n        room.event,\n        room.desc,\n        room.locked\n      );\n    }\n    getNewSession(event);\n    setTime({ cs: 0, s: 0, m: 0, h: 0 });\n  }, [event, loading]);\n\n  useEffect(() => {\n    if (room.isHost) {\n      socket.emit('new event', room.roomID, event);\n      setRoomEvent(event);\n      setRoomScramble('Host has not generated any scrambles yet');\n      setScramble('Host has not generated any scrambles yet');\n      setStatus('waiting');\n    }\n    getNewSession();\n  }, [event]);\n\n  useEffect(() => {\n    if (penalty !== '')\n      addPenalty(event, session.solves[session.solves.length - 1]._id, penalty);\n    setPenalty('');\n    getStats(user.username, session);\n    setScramble(scramble);\n    socket.emit('solved', room.roomID, user.username, session);\n  }, [session.solves]);\n\n  useEffect(() => {\n    if (status === '+2') setPenalty('+2');\n    if (status === 'DNF') setPenalty('DNF');\n  }, [status]);\n\n  useEffect(() => {\n    if (room.isHost) {\n      socket.on('user connected', socketID => {\n        socket.emit(\n          'send room info',\n          event,\n          scramble,\n          room.stats,\n          room.desc,\n          room.locked,\n          socketID\n        );\n      });\n    }\n  }, [room.stats]);\n\n  useEffect(() => {\n    if (!profile) getCurrentProfile();\n    getStats(user.username, session);\n\n    // let url = window.location.href.split('/');\n    // if (room.roomID !== url[url.length - 1]) {\n    //   room.roomID = url[url.length - 1];\n    // }\n\n    // if (room.roomID === '') {\n    //   let url = window.location.href.split('/');\n    //   setRoom(url[url.length - 1]);\n    // }\n\n    socket.emit('join room', room.roomID, socket.id, {\n      special: true,\n      text: 'JOINED THE ROOM',\n      username: user.username,\n      avatar: user.avatar,\n      timestamp: moment().format('hh:mm a'),\n    });\n\n    socket.on('stats', (username, session) => {\n      getStats(username, session);\n    });\n\n    socket.on('get scramble', scramble => {\n      setRoomScramble(scramble);\n      setScramble(scramble);\n      if (scramble !== 'Host has not generated any scrambles yet')\n        setStatus('ready');\n    });\n\n    socket.on('get event', event => {\n      setRoomEvent(event);\n    });\n\n    socket.on('get room info', (event, scramble, stats, desc) => {\n      setRoomEvent(event);\n      setRoomScramble(scramble);\n      setRoomDesc(desc);\n      setScramble(scramble);\n      setStats(stats);\n      if (scramble !== 'Host has not generated any scrambles yet')\n        setStatus('ready');\n    });\n\n    socket.on('host open', () => {\n      setHost(false);\n    });\n\n    socket.on('host closed', () => {\n      setHost(true);\n    });\n\n    return function cleanup() {\n      leavingRoom();\n    };\n  }, []);\n\n  useSpace('keyup', handleUp);\n  useSpace('keydown', handleDown);\n\n  return (\n    <Fragment>\n      <div className='timer'>\n        {room.isHost ? (\n          <div className='timer-top'>\n            <div>\n              <img\n                src={require(`../../img/events/${eventNaming[event]}.svg`)}\n                alt={event.name}\n                className='small-image'\n              />\n            </div>\n            <select\n              className='event-picker'\n              name='name'\n              value={event}\n              onChange={changeEvent}\n            >\n              {profile &&\n                profile.events.map(ev => (\n                  <option key={ev._id} value={ev.name}>\n                    {ev.name}\n                  </option>\n                ))}\n            </select>\n            <span>YOU ARE THE HOST</span>\n          </div>\n        ) : (\n          <div className='timer-top'>\n            {room && room.event !== '' && (\n              <Fragment>\n                <div>\n                  <img\n                    src={require(`../../img/events/${\n                      eventNaming[room.event]\n                    }.svg`)}\n                    alt={room.event}\n                    className='small-image mright'\n                  />\n                </div>\n                <p className='M inline mright smleft'>{room.event}</p>{' '}\n                {profile &&\n                  profile.events &&\n                  profile !== null &&\n                  !profile.events.map(ev => ev.name).includes(room.event) && (\n                    <Fragment>\n                      {console.log(profile)}\n                      {console.log(room.event)}\n                      {window.alert(\n                        'This event is not in your profile. Please add it to your profile and return to the room.'\n                      )}\n                      <Redirect to='/edit-profile' />\n                    </Fragment>\n                  )}\n              </Fragment>\n            )}\n            <span>HOST CHOOSES EVENT</span>\n          </div>\n        )}\n        <div className='sidebar'>\n          <div className='mbottom'>\n            <h1 className='M'>Options</h1>\n            {room.isHost && (\n              <button\n                className='btn btn-success btn-small'\n                onClick={() => generateScramble()}\n              >\n                Next Scramble\n              </button>\n            )}\n            {!room.hostPresent && !room.isHost && (\n              <button className='btn btn-success btn-small' onClick={hostRoom}>\n                Host Room\n              </button>\n            )}\n            {session.solves && session.solves.length !== 0 && (\n              <button className='btn btn-light btn-small' onClick={clearSolves}>\n                Clear Session\n              </button>\n            )}\n            <button\n              className='btn btn-light btn-small'\n              onClick={() => toggleInspection(!inspection)}\n            >\n              Turn {inspection ? 'off' : 'on'} Inspection\n            </button>\n            <Link\n              to='/compete'\n              className='btn btn-danger btn-small'\n              onClick={leavingRoom}\n            >\n              Leave Room\n            </Link>\n            {session.solves &&\n              session.solves.length > 1 &&\n              session.solves[session.numsolves - 1].penalty !== 'DNF' && (\n                <Fragment>\n                  {session.solves[session.numsolves - 1].penalty !== '+2' && (\n                    <button\n                      className='btn btn-light btn-small btn-auto'\n                      onClick={plus2}\n                    >\n                      +2\n                    </button>\n                  )}\n                  <button\n                    className='btn btn-light btn-small btn-auto'\n                    onClick={dnf}\n                  >\n                    DNF\n                  </button>\n                </Fragment>\n              )}\n            <div className='checkboxes'>\n              <div className='bubble-group'>\n                <div>\n                  <div\n                    className='bubble'\n                    style={cmo3 ? { backgroundColor: '#bbb' } : {}}\n                    onClick={() => setcmo3(!cmo3)}\n                  />\n                  Mean 3\n                </div>\n                <div>\n                  <div\n                    className='bubble'\n                    style={bmo3 ? { backgroundColor: '#bbb' } : {}}\n                    onClick={() => setbmo3(!bmo3)}\n                  />\n                  Best Mean 3\n                </div>\n              </div>\n              <div className='bubble-group'>\n                <div>\n                  <div\n                    className='bubble'\n                    style={cavg5 ? { backgroundColor: '#bbb' } : {}}\n                    onClick={() => setcavg5(!cavg5)}\n                  />{' '}\n                  Avg 5\n                </div>\n                <div>\n                  <div\n                    className='bubble'\n                    style={bavg5 ? { backgroundColor: '#bbb' } : {}}\n                    onClick={() => setbavg5(!bavg5)}\n                  />{' '}\n                  Best Avg 5\n                </div>\n              </div>\n            </div>\n            <div className='bubble-group'>\n              <div>\n                <div\n                  className='bubble'\n                  style={cavg12 ? { backgroundColor: '#bbb' } : {}}\n                  onClick={() => setcavg12(!cavg12)}\n                />{' '}\n                Avg 12\n              </div>\n              <div>\n                <div\n                  className='bubble'\n                  style={bavg12 ? { backgroundColor: '#bbb' } : {}}\n                  onClick={() => setbavg12(!bavg12)}\n                />{' '}\n                Best Avg 12\n              </div>\n            </div>\n            <div className='bubble-group'>\n              <div>\n                <div\n                  className='bubble'\n                  style={best ? { backgroundColor: '#bbb' } : {}}\n                  onClick={() => setbest(!best)}\n                />{' '}\n                Best Single\n              </div>\n              <div>\n                <div\n                  className='bubble'\n                  style={worst ? { backgroundColor: '#bbb' } : {}}\n                  onClick={() => setworst(!worst)}\n                />{' '}\n                Worst\n              </div>\n            </div>\n          </div>\n        </div>\n        <div>\n          {(status === 'stopped' ||\n            status === 'started' ||\n            status === 'waiting' ||\n            status === 'ready') && (\n            <h1 className={green ? 'XL green' : 'XL'}>\n              {time.h > 0 && (\n                <span>\n                  {time.h}:{time.m < 10 && '0'}\n                </span>\n              )}\n              {time.m > 0 && (\n                <span>\n                  {time.m}:{time.s < 10 && '0'}\n                </span>\n              )}\n              {time.s}\n              <span className='centiseconds'>\n                .{time.cs < 10 && '0'}\n                {time.cs}\n              </span>\n            </h1>\n          )}\n          {status === 'inspecting' && (\n            <h1 className={green ? 'XL green' : 'XL'}>{time.s}</h1>\n          )}\n          {status === '+2' && <h1 className='XL red'>+2</h1>}\n          {status === 'DNF' && <h1 className='XL red'>DNF</h1>}\n          <p>Scramble: {room && room.scramble}</p>\n          {room && room.isHost === false && status === 'waiting' && (\n            <p className='S'>Waiting for the next scramble...</p>\n          )}\n        </div>\n        <div className='solves stats-table'>\n          <p className='S inline'>Solves </p>\n          <br />\n          <Stats\n            bmo3={bmo3}\n            cmo3={cmo3}\n            bavg5={bavg5}\n            cavg5={cavg5}\n            bavg12={bavg12}\n            cavg12={cavg12}\n            best={best}\n            worst={worst}\n            formatTime={formatTime}\n          />\n        </div>\n      </div>\n      <Chat />\n    </Fragment>\n  );\n};\n\nCompeteTimer.propTypes = {\n  getSession: PropTypes.func.isRequired,\n  newSession: PropTypes.func.isRequired,\n  clearSession: PropTypes.func.isRequired,\n  addSolve: PropTypes.func.isRequired,\n  addPenalty: PropTypes.func.isRequired,\n  updateStats: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  leaveRoom: PropTypes.func.isRequired,\n  createRoom: PropTypes.func.isRequired,\n  setHost: PropTypes.func.isRequired,\n  setRoomEvent: PropTypes.func.isRequired,\n  setRoomScramble: PropTypes.func.isRequired,\n  setRoomDesc: PropTypes.func.isRequired,\n  setStats: PropTypes.func.isRequired,\n  getStats: PropTypes.func.isRequired,\n  solve: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  room: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  solve: state.solve,\n  profile: state.profile,\n  room: state.room,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {\n  getSession,\n  newSession,\n  clearSession,\n  addSolve,\n  addPenalty,\n  updateStats,\n  getCurrentProfile,\n  leaveRoom,\n  createRoom,\n  setHost,\n  setRoomEvent,\n  setRoomScramble,\n  setRoomDesc,\n  setStats,\n  getStats,\n})(CompeteTimer);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport eventNaming from '../../utils/eventNaming.json';\n\nconst RoomItem = ({ room }) => {\n  let info = room[Object.keys(room)[0]];\n  return (\n    <div className='room'>\n      <div className='room-info'>\n        <img\n          src={require(`../../img/events/${eventNaming[info.event]}.svg`)}\n          alt={info.event}\n          className='event-img'\n        />\n        <div className='smleft'>\n          <p className='S'>\n            Current Event: {info.event}\n            {info.desc && <p className='smaller'>{info.desc}</p>}\n          </p>\n          <p className='S'>Host: {info.hostname}</p>\n          <p className='S'>Number of Cubers: {info.numusers}</p>\n        </div>\n      </div>\n      <div>\n        <Link\n          to={`/compete/${Object.keys(room)[0]}`}\n          className='btn btn-primary'\n        >\n          Join Room\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default RoomItem;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createRoom } from '../../actions/room';\nimport { socket } from '../../utils/socket';\nimport RoomItem from './RoomItem';\n\nconst Rooms = ({ createRoom, room }) => {\n  const [rooms, setRooms] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [desc, setDesc] = useState('');\n  const [locked, setLocked] = useState(false);\n\n  useEffect(() => {\n    socket.emit('request rooms');\n    socket.on('send the rooms', send_rooms => {\n      setRooms(send_rooms);\n      console.log(send_rooms);\n    });\n  }, []);\n\n  const onChange = e => {\n    setDesc(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createRoom('', desc, locked);\n  };\n\n  if (room.roomID !== '') return <Redirect to={`/compete/${room.roomID}`} />;\n  else\n    return (\n      <Fragment>\n        <h1 className='L'>Compete</h1>\n        <p className='S'>\n          <span className='smaller'>\n            <i className='fas fa-users fa-xs' />\n          </span>{' '}\n          Join a room to compete with other cubers!\n        </p>\n        <p>\n          <i className='fas fa-lock fa-xs' /> Locked Rooms can only be joined\n          via link for security reasons\n        </p>\n        <button onClick={() => setToggle(!toggle)} className='btn btn-light'>\n          {toggle ? 'Hide' : 'Add'} New Room\n        </button>\n        {toggle && (\n          <form className='form' onSubmit={onSubmit}>\n            <div className='message-box'>\n              <input\n                type='text'\n                placeholder='Description'\n                name='desc'\n                value={desc}\n                onChange={onChange}\n                className='input-button'\n              />\n              <div onClick={() => setLocked(!locked)}>\n                {locked ? (\n                  <i className='fas fa-lock fa-2x smleft' />\n                ) : (\n                  <i className='fas fa-lock-open fa-2x smleft green' />\n                )}\n              </div>\n              <input\n                type='submit'\n                value='Create New Room'\n                className='btn btn-success create-button'\n              />\n            </div>\n            <small>\n              It is common to include the approximate speed of the solvers in\n              the room for the solving events (e.g. sub-20 on 3x3)\n            </small>\n          </form>\n        )}\n\n        <div className='rooms'>\n          {rooms.length > 0 ? (\n            rooms.map(room => (\n              <div>\n                {console.log(room)}\n                <RoomItem key={Object.keys(room)[0]} room={room} />\n              </div>\n            ))\n          ) : (\n            <p>\n              There are currently no public rooms. Feel free to create one\n              yourself!\n            </p>\n          )}\n        </div>\n      </Fragment>\n    );\n};\n\nRooms.propTypes = {\n  createRoom: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return {\n    room: state.room,\n  };\n};\n\nexport default connect(mapStateToProps, { createRoom })(Rooms);\n","import React, { Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Alert from '../layout/Alert';\nimport NotFound from '../layout/NotFound';\nimport Register from '../auth/Register';\nimport Login from '../auth/Login';\nimport Dashboard from '../profiles/Dashboard';\nimport Timer from '../timer/Timer';\nimport Tutorials from '../tutorials/Tutorials';\nimport Profiles from '../profiles/Profiles';\nimport PrivateRoute from './PrivateRoute';\nimport ProfileForm from '../profiles/ProfileForm';\nimport DisplayProfile from '../profiles/DisplayProfile';\nimport CompeteTimer from '../timer/CompeteTimer';\nimport Rooms from '../rooms/Rooms';\n\nconst Routes = () => {\n  return (\n    <Fragment>\n      <Alert />\n      <section className='container'>\n        <Switch>\n          <Route exact path='/register' component={Register} />\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/tutorials' component={Tutorials} />\n          <PrivateRoute exact path='/timer' component={Timer} />\n          <PrivateRoute exact path='/compete' component={Rooms} />\n          <PrivateRoute\n            exact\n            path='/compete/:roomid'\n            component={CompeteTimer}\n          />\n          <PrivateRoute exact path='/profile/:id' component={DisplayProfile} />\n          <PrivateRoute exact path='/profiles' component={Profiles} />\n          <PrivateRoute exact path='/dashboard' component={Dashboard} />\n          <PrivateRoute exact path='/create-profile' component={ProfileForm} />\n          <PrivateRoute exact path='/edit-profile' component={ProfileForm} />\n          <Route component={NotFound} />\n        </Switch>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default Routes;\n","import api from './api';\n\nconst setAuthToken = token => {\n  if (token) {\n    api.defaults.headers.common['x-auth-token'] = token;\n    localStorage.setItem('token', token);\n  } else {\n    delete api.defaults.headers.common['x-auth-token'];\n    localStorage.removeItem('token');\n  }\n};\n\nexport default setAuthToken;\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes';\nimport './styles/App.css';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nconst App = () => {\n  // JWT is stateless, so this constantly checks for the user token\n  useEffect(() => {\n    setAuthToken(localStorage.token);\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route component={Routes} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","var map = {\n\t\"./222.svg\": 131,\n\t\"./333.svg\": 132,\n\t\"./333bf.svg\": 133,\n\t\"./333fm.svg\": 134,\n\t\"./333mbf.svg\": 135,\n\t\"./333oh.svg\": 136,\n\t\"./444.svg\": 137,\n\t\"./444bf.svg\": 138,\n\t\"./555.svg\": 139,\n\t\"./555bf.svg\": 140,\n\t\"./666.svg\": 141,\n\t\"./777.svg\": 142,\n\t\"./clock.svg\": 143,\n\t\"./minx.svg\": 144,\n\t\"./pyram.svg\": 145,\n\t\"./skewb.svg\": 146,\n\t\"./sq1.svg\": 147\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 29;","module.exports = __webpack_public_path__ + \"static/media/logo.d6b57692.png\";","module.exports = __webpack_public_path__ + \"static/media/cubenotation.f4f268d0.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.c8d74389.gif\";"],"sourceRoot":""}